name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Análise de Código (Lint)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Instalar dependências
        run: pip install -r requirements.txt

      - name: Verificar qualidade do código com flake8
        run: flake8 app.py --max-line-length=120 || echo "Avisos encontrados"

  security_scan:
    name: Análise de Segurança
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Instalar dependências
        run: pip install -r requirements.txt

      - name: Analisar segurança do código com Bandit
        run: bandit -r app.py || echo "Avisos de segurança encontrados"

  build:
    name: Construção do Projeto
    runs-on: ubuntu-latest
    needs: security_scan
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Instalar dependências
        run: pip install -r requirements.txt || echo "Nenhuma dependência"

  test:
    name: Execução de Testes
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Executar testes
        run: python -m unittest discover || echo "Nenhum teste encontrado"

  performance_test:
    name: Teste de Performance
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Medir tempo de execução
        run: |
          python -c "
          import time
          start = time.time()
          import app
          app.slow_function()
          print(f'Tempo de execução: {time.time() - start:.2f}s')"

  deploy:
    name: Deploy do Aplicativo
    runs-on: ubuntu-latest
    needs: performance_test
    steps:
      - name: Simulação de Deploy
        run: echo 'Deploy realizado com sucesso!'

  notify:
    name: Notificação de Sucesso
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Enviar Notificação
        run: echo 'Notificação enviada para o time!'
